// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Match {
  gameId       String     @id
  MatchInfo    MatchInfo?
  participants Summoner[] @relation("MatchSummoners")
}

model MatchInfo {
  gameId             String   @id
  gameDuration       Int
  gameMode           String
  gameName           String
  gameType           String
  gameVersion        String
  mapId              Int
  participants       Json
  platformId         String
  queueId            Int
  teams              Json
  tournamentCode     String
  gameCreation       DateTime
  gameStartTimestamp DateTime
  gameEndTimestamp   DateTime
  match              Match    @relation(fields: [gameId], references: [gameId], onDelete: Cascade)
}

model Challenges {
  puuid                   String            @id @unique
  summoner                Summoner          @relation(fields: [puuid], references: [puuid])
  jackOfAllChamps         ChampionDetails[] @relation("ChallengeHeroes")
  championOcean           ChampionDetails[] @relation("ChallengesChampionOcean")
  championOcean2024Split3 ChampionDetails[] @relation("ChallengesChampionOcean2024Split3")
  adaptToAllSituations    ChampionDetails[] @relation("ChallengesAdaptToAllSituations")
  invincible              ChampionDetails[] @relation("ChallengesInvincible")
}

model Summoner {
  summonerId        String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  region            String
  username          String
  profileIconId     Int
  puuid             String             @id @unique
  summonerLevel     Int
  revisionDate      DateTime
  accountId         String
  gameName          String?
  tagLine           String?
  challenges        Challenges?
  championData      ChampionMastery[]
  matches           Match[]            @relation("MatchSummoners")
  ChallengesDetails ChallengesDetails?
}

model ChampionDetails {
  id                                Int          @id @unique
  version                           String?
  key                               String
  name                              String
  title                             String
  blurb                             String
  attack                            Int
  defense                           Int
  magic                             Int
  difficulty                        Int
  full                              String
  sprite                            String
  group                             String
  x                                 Int
  y                                 Int
  w                                 Int
  h                                 Int
  tags                              String[]
  partype                           String
  hp                                Float
  hpperlevel                        Float
  mp                                Float
  mpperlevel                        Float
  movespeed                         Float
  armor                             Float
  armorperlevel                     Float
  spellblock                        Float
  spellblockperlevel                Float
  attackrange                       Float
  hpregen                           Float
  hpregenperlevel                   Float
  mpregen                           Float
  mpregenperlevel                   Float
  crit                              Float
  critperlevel                      Float
  attackdamage                      Float
  attackdamageperlevel              Float
  attackspeedperlevel               Float
  attackspeed                       Float
  Challenges                        Challenges[] @relation("ChallengeHeroes")
  ChallengesChampionOcean           Challenges[] @relation("ChallengesChampionOcean")
  ChallengesChampionOcean2024Split3 Challenges[] @relation("ChallengesChampionOcean2024Split3")
  ChallengesAdaptToAllSituations    Challenges[] @relation("ChallengesAdaptToAllSituations")
  ChallengesInvincible              Challenges[] @relation("ChallengesInvincible")
}

model ChampionMastery {
  championId                   Int
  updatedAt                    DateTime @updatedAt
  championLevel                Int
  championPoints               Int
  chestGranted                 Boolean
  tokensEarned                 Int
  lastPlayTime                 DateTime
  championPointsUntilNextLevel Int
  championPointsSinceLastLevel Int
  puuid                        String
  summoner                     Summoner @relation(fields: [puuid], references: [puuid])

  @@unique([championId, puuid])
}

model ChallengesConfig {
  id             Int                     @id
  state          String
  leaderboard    Boolean
  endTimestamp   DateTime?
  thresholds     Json
  localizedNames ChallengeLocalization[]
}

model ChallengeLocalization {
  id               Int
  language         Language
  description      String
  name             String
  shortDescription String
  ChallengesConfig ChallengesConfig @relation(fields: [id], references: [id], onDelete: Cascade)

  @@unique([id, language])
}

enum Language {
  en_US
}

model TotalPoints {
  level               String
  current             Int
  max                 Int
  percentile          Float
  challengesDetails   ChallengesDetails @relation("TotalPoints_ChallengesDetails", fields: [challengesDetailsId], references: [puuid])
  challengesDetailsId String            @unique
}

model Preferences {
  bannerAccent             String
  title                    String
  challengeIds             Int[]
  crestBorder              String
  prestigeCrestBorderLevel Int
  challengesDetails        ChallengesDetails @relation("Preferences_ChallengesDetails", fields: [challengesDetailsId], references: [puuid])
  challengesDetailsId      String            @unique
}

model Challenge {
  challengeId         Int
  percentile          Float?
  level               String?
  value               Int?
  achievedTime        DateTime?
  position            Int?
  playersInLevel      Int?
  challengesDetails   ChallengesDetails @relation(fields: [challengesDetailsId], references: [puuid])
  challengesDetailsId String

  @@unique([challengeId, challengesDetailsId])
}

model CategoryPoints {
  category            String
  level               String
  current             Int
  max                 Int
  percentile          Float
  challengesDetails   ChallengesDetails @relation(fields: [challengesDetailsId], references: [puuid])
  challengesDetailsId String

  @@unique([category, challengesDetailsId])
}

model ChallengesDetails {
  puuid          String           @unique
  challenges     Challenge[]
  categoryPoints CategoryPoints[]
  totalPoints    TotalPoints?     @relation("TotalPoints_ChallengesDetails")
  preferences    Preferences?     @relation("Preferences_ChallengesDetails")
  summoner       Summoner         @relation(fields: [puuid], references: [puuid])
}
